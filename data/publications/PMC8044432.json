{
  "id": "PMC8044432",
  "title": "NASA GeneLab RNA-Seq Consensus Pipeline: Standardized Processing of Short-Read RNA-Seq Data",
  "authors": "",
  "year": "",
  "doi": "",
  "source_row": {
    "Title": "NASA GeneLab RNA-Seq Consensus Pipeline: Standardized Processing of Short-Read RNA-Seq Data",
    "Link": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8044432/"
  },
  "sections": {
    "abstract": "Summary\nWith the development of transcriptomic technologies, we are able to quantify precise changes in gene expression profiles from astronauts and other organisms exposed to spaceflight. Members of NASA GeneLab and GeneLab-associated analysis working groups (AWGs) have developed a consensus pipeline for analyzing short-read RNA-sequencing data from spaceflight-associated experiments. The pipeline includes quality control, read trimming, mapping, and gene quantification steps, culminating in the detection of differentially expressed genes. This data analysis pipeline and the results of its execution using data submitted to GeneLab are now all publicly available through the GeneLab database. We present here the full details and rationale for the construction of this pipeline in order to promote transparency, reproducibility, and reusability of pipeline data; to provide a template for data processing of future spaceflight-relevant datasets; and to encourage cross-analysis of data from other databases with the data available in GeneLab.",
    "introduction": "Introduction\nOpportunities to perform biological studies in space are rare due to high costs and a limited number of funding sources, rocket launches, and spaceflight crew hours for experimental procedures. In addition, spaceflight research is decentralized and distributed across numerous laboratories in the United States and abroad. As a result, studies performed in different laboratories often utilize different organisms, strains, cell lines, and experimental procedures. Adding to this complexity are variance in spaceflight factors and/or confounders within each study, such as degree of radiation exposure, experiment duration, CO\n2\n concentration, light cycle, and water availability, all of which can have effects on an organism's health and gene expression profiles during spaceflight (\nRutter et al., 2020\n). In order to optimize the integration of data from this diverse array of spaceflight experiments, it is paramount that variations in data processing are minimized.\nThere is presently no consensus on how best to analyze RNA-seq data, and the impact of analysis tool selection on results is an active field of research. Indeed, selections of trimming parameters (\nWilliams et al., 2016\n), read aligner (\nYang et al., 2015\n), quantification tool (\nTeng et al., 2016\n), and differential expression detection algorithm (\nCosta-Silva et al. 2017\n) all affect results. Because of such challenges, groups such as ENCODE and MINSEQE have developed standardized analysis pipelines for better comparison of RNA-seq datasets (\nENCODE Project Consortium et al., 2020\n; \nFunctional Genomics Data Society, 2012\n).\nThe NASA GeneLab database (\nhttps://genelab-data.ndc.nasa.gov/genelab/projects\n) was created as a central repository for spaceflight-related omics-data. The repository includes data from experiments that profile transcription (RNA-seq, microarray), DNA/RNA methylation, protein expression, metabolite pools, and metagenomes. The most prevalent data type in this repository is RNA-seq from organisms exposed to spaceflight conditions. As of August 2020, the NASA GeneLab database has over eighty datasets with RNA-sequencing data (\nTable S1\n). These datasets include \nHomo sapiens\n (human), \nMus musculus\n (mouse), \nDrosophila melanogaster\n (fruit fly), \nArabidopsis thaliana\n (model higher plant), \nOryzias latipes\n (Japanese rice fish), \nHelix lucorum\n (land snail), \nBrassica rapa\n (Fast Plant), \nEruca vesicaria\n (arugula/edible plant), \nEuprymna scolopes\n (Hawaiian bobtail squid), \nCeratopteris richardii\n (aquatic fern), and the bacterium, \nBacillus subtilis\n from experiments performed during true spaceflight on various orbital platforms such as the Space Shuttle and International Space Station (ISS), as well as spaceflight-analog studies, such as hindlimb unloading and bed rest studies (\nBerrios et al., 2020\n).\nNASA's GeneLab and Ames Life Sciences Data Archive (ALSDA) projects have put forward an ambitious strategy focused on integrating data, metadata, and biospecimens to fully utilize the 40+ years of archived NASA Life Sciences data (\nScott et al., 2020\n). One of the first steps in this effort is the ability to analyze how experimental factors common to multiple datasets impact molecular signaling. Such meta-analysis can only occur if metadata, data, and processed data are harmonized. As part of this strategy, GeneLab engaged with the scientific community and held its first Analysis Working Group (AWG) workshop in 2018. Spaceflight researchers from universities and organizations across the United States and abroad met to begin the creation of a standardized, consensus data-processing pipeline for one of the most common types of spaceflight datasets: transcription profiling via RNA-sequencing. Scientists at this workshop met to discuss the merits of various bioinformatic software tools for processing RNA-sequencing data and ultimately agreed on a single pipeline of these tools.\nThe main driver for developing the consensus pipeline was to present consistently processed data to the public, therefore making space-relevant multi-omics data more accessible and reusable. The overall goals were (1) to get more consistently processed data to the public; (2) to provide output data from every step of the consensus pipeline so users can download and use these “intermediate” data; (3) to support easier and more consistent analysis of space-relevant data by users including those in the NASA AWGs; and (4) to allow easier cross-analysis of experiments to identify effects that result from the spaceflight environment, independent of confounding factors. In addition, many of these data in the GeneLab database have not been previously analyzed, as their generation was relatively recent. Therefore, providing new and processed datasets to the public allows biologists and others to more easily interpret these data and contributes significantly to our collective knowledge of the effects of spaceflight on terrestrial organisms.\nHere we present the RNA-seq consensus pipeline (RCP) developed by the GeneLab AWG along with the rationale behind the tool settings and options selected. The RCP includes three distinct steps: data pre-processing, data processing, and differential gene expression computation/annotation (\nFigure 1\nA). These steps use tools for quality control (FastQC, MultiQC) (\nAndrews, 2010\n; \nEwels et al., 2016\n), read trimming (TrimGalore) (\nKrueger 2019\n), mapping (STAR) (\nDobin et al., 2013\n), quantification (RSEM) (\nLi and Dewey 2011\n), and differential gene expression calculation/annotation (DESeq2) (\nLove et al. 2014\n) (\nFigure 1\nB). The RCP has been integrated into the GeneLab database, and files produced by the RCP for each RNA-seq dataset hosted in GeneLab are and will continue to be publicly available for download.\nFigure 1\nGeneLab RNA-seq Consensus Pipeline (RCP)\n(A) The three broad steps of the RCP. The RCP handles (1) data preprocessing to trim sequencing adapters and to provide quality control metrics; (2) data processing to map reads to the reference genome and quantify the number of read counts per gene; and (3) differential gene expression calculation, which will provide a list of differentially expressed genes that can be sorted by adjusted p value and log fold-change.\n(B) The full RCP annotated with tools, input files, and output files.",
    "results": "Results\nData pre-processing: quality control and trimming\nThere are three distinct steps to the RCP, the first of which is data preprocessing (\nFigure 2\nA). The pipeline begins with quality control (QC) of raw FASTQ files from a short-read Illumina sequencer using the FastQC software (\nAndrews, 2010\n) (\nFigure 2\nB). FastQC is one of the most widely used QC programs for short-read sequencing data. It provides information that can be used to assess sample and sequencing quality, including base statistics, per base sequencing quality, per sequence quality scores, per base sequence content, per base GC content, per sequence GC content, per base N content, sequence length distributions, sequence duplication levels, overrepresented sequences, and k-mer content.\nFigure 2\nData preprocessing (pipeline step 1): quality control and trimming\n(A) Data preprocessing pipeline. FastQ files from Illumina base-calling software are quality checked using FastQC and MultiQC. Data are then trimmed using TrimGalore and are re-checked for quality; (B) flags used for FastQC program; (C) flags used for MultiQC program; (D) flags used for TrimGalore program; trimmed reads (∗fastq.gz) are then used as input data for FastQC (B) followed by MultiQC (C) to generate trimmed read quality metrics. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS Repository.\nThe FastQC program is run on each individual sample file. However, reviewing the FastQC results for each sample file can be tedious and time consuming. Experiments typically have many sample files (biological and/or technical replicates) for multiple experimental conditions (spaceflight, ground control, etc.). For this reason, we also use the MultiQC package (\nEwels et al., 2016\n) (\nFigure 2\nC) to create a summary statistics report that includes the same quality control result categories from FastQC across all experiment samples.\nAfter performing quality control on the raw FASTQ data, reads are trimmed using TrimGalore (\nKrueger 2019\n) to remove sequencing adapters and low-quality bases that would disrupt read mapping during the data processing pipeline step (\nFigure 2\nD). TrimGalore is a wrapper program that uses the cutadapt program (\nMartin 2011\n) for read trimming. TrimGalore was selected for the RCP due to its simplified command line interface, thorough output of trimming metrics, and ability to automatically detect adapters. In this step, bases that are part of a sequencing adapter or of low quality are removed from each read, and reads that become too short are subsequently removed. After trimming, the quality control programs, FastQC and MultiQC, are again run on the trimmed FASTQ files for viewing the quality control metrics of the reads that will be used for data processing. Once the data have been preprocessed, the sequenced reads are ready for mapping and quantification.\nData processing: read mapping and sample quantification\nIn the data processing step (\nFigure 1\n; Step 2A), the trimmed reads are first aligned to the reference genome (\nFigure 3\nA) with STAR, a splice-aware aligner (\nDobin et al., 2013\n). STAR must be run in two steps. The first step is to create indexed genome files (\nFigure 3\nB). These files are used to assist read mapping and only need to be generated once for each reference genome file. This step requires reference FASTA and GTF files (\nTable S2\n). Some datasets include the External RNA Control Consortium (ERCC) spike-in control—a pool of 96 synthetic RNAs with various lengths and GC content covering a 2\n20\n concentration range (\nJiang et al., 2011\n). If ERCC spike-ins were included, the spike-in FASTA and GTF files are appended to the reference FASTA and GTF files, respectively. The second step of STAR mapping is to use the indexed reference genome and the trimmed reads from the preprocessing step in order to map the reads to the genome and the transcriptome (\nFigure 3\nC). STAR will also produce genome mapped data, which can optionally be used to find reads that map outside of annotated reference transcripts. STAR mapping output data are in Binary Alignment Map (BAM) format, which has a separate entry for each mapped read and states which transcript each read is mapped to. In order to improve the detection and quantification of splice sites, STAR is run in “two-pass mode.” Here, splice sites are detected in the initial mapping to the reference and used to build a new reference that includes these splice sites. Reads are then re-mapped to this dynamically generated reference to improve the quantification of splice isoforms (\nDobin et al., 2013\n). Users are provided with these results (as per sample SJ.out files) for further analysis of differential splicing.\nFigure 3\nData processing (pipeline step 2A): read mapping\n(A) Data processing pipeline. Trimmed reads are mapped to their reference genome and transcriptome with STAR. Gene counts are then quantified with RSEM; (B) flags used for generating the indexed STAR reference files; (C) flags used for mapping reads with STAR. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS Repository.\nThe second part of processing is quantifying the number of reads mapped to each annotated transcript and gene (\nFigure 1\nA; Step 2B, \nFigure 4\nA). For this task, the RCP uses RSEM (\nLi and Dewey 2011\n). The main reasons for using RSEM are its ability to account for reads that map to multiple transcripts and distinguish gene isoforms. In short-read sequencing experiments it is likely that some number of reads will map to multiple regions in the genome. RSEM computes maximum likelihood abundance estimates to split the read count across multiple genes. Similar to STAR, RSEM is run in two distinct phases (\nFigure 4\nA). The first phase uses the reference genome and GTF files (with or without ERCC as appropriate) (\nTable S2\n) to prepare indexed genome files (\nFigure 4\nB). The second phase uses the indexed files and the mapped reads from STAR to assign counts to each gene (\nFigure 4\nC). There are two output files generated for each sample: counts assigned to genes and counts assigned to isoforms. Gene counts are used to calculate differential gene expression. Isoform counts are also generated as an option to look at differential isoform expression but are not used during differential gene expression calculation in the RCP. Once the RSEM count files are generated, the data are used to compute differentially expressed genes. A list of the reference genomes used in the GeneLab pipeline is available in \nTable S2\n . These reference genomes were the most recent releases at the time each STAR and RSEM indexed references were created. Although it is possible to run STAR mapping through the RSEM toolkit, we elected not to do this because the alignment parameters used in this case are from ENCODE's STAR-RSEM pipeline and are not customizable. Thus, we would have been precluded from using the precise mapping parameters agreed to by the GeneLab AWG.\nFigure 4\nData processing (pipeline step 2B): gene quantification\n(A) Data processing pipeline. Mapping results from STAR are quantified by RSEM; (B) parameters for RSEM indexed reference files generation; (C) parameters for quantifying gene and isoform counts with RSEM. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS repository.\nWe elected to adopt a mapping-based approach rather than rapidly quantifying the reads via a k-mer-based counting algorithm, pseudo-aligners, or a quasi-mapping method that utilizes RNA-seq inference procedures such as Kallisto (\nBray et al., 2016\n) or Salmon (\nPatro et al., 2017\n) despite their speed advantages. This is because alignment-free quantification tools do not accurately quantify low-abundant and small RNAs especially when biological variation is present (\nWu et al., 2018\n). Furthermore, alignment of reads allows for additional analyses beyond transcript and gene quantification such as measurement of gene body coverage and detection of novel transcripts.\nThere are several alignment-based mapping tools available and each has advantages and disadvantages. An alignment tool that is sensitive to splice-isoforms is critical to accurately identify how expression of splice-isoforms is affected by the spaceflight environment. DNA-specific aligners such as BWA (\nLi and Durbin 2009\n) and Bowtie (\nLangmead et al., 2009\n) cannot handle intron-sized gaps and thus an RNA-seq-specific aligner is needed (\nBaruzzo et al., 2017\n). In addition to splice-awareness, when selecting an aligner the following criteria were also considered: ability to input both single- and paired-end reads, handle strand-specific data, applicability to a variety of different model organisms with both low- and high-complexity genomic regions, efficient runtime and memory usage, ability to identify chimeric reads, high sensitivity, low rate of false discovery, and ability to output both genome and transcriptome alignments. Several studies have been conducted to compare the wide variety of available RNA-seq specific alignment tools, and of these, the STAR aligner consistently performs better than or on par with the tools tested for the indicated criteria (\nBaruzzo et al., 2017\n; \nSchaarschmidt et al., 2020\n; \nRaplee et al. 2019\n).\nDifferential gene expression calculations and addition of gene annotations\nOnce reads have been mapped and quantified, differential expression analysis is performed using the DESeq2 R package (\nFigure 1\n; Step 3, \nFigure 5\nA). Unlike the previous steps, a custom R script (GeneLab_DGE_wERCC.R or GeneLab_DGE_noERCC.R) (\nData S1\nand \nS2\n) is used to run DESeq2; to create both unnormalized and normalized counts tables; and to generate a differential gene expression (DGE) output table containing normalized counts for each sample, DGE results, and gene annotations (\nFigure 5\nB). The GeneLab DGE R script also creates computer-readable tables that are used by the GeneLab visualization portal to generate various plots so users can easily view and begin interpreting the processed data. These scripts are provided in the NASA GeneLab_Data_Processing Github repository (\nhttps://github.com/nasa/GeneLab_Data_Processing\n). In the following sections we describe each step of these scripts in order.\nFigure 5\nDifferential gene expression calculation (pipeline step 3)\n(A) Data processing pipeline. The R program DESeq2 is run in order to determine which genes are differentially expressed between experimental conditions using gene count files from RSEM.\n(B) Output files generated. The table columns distinguish which script produces each output. The columns distinguish how those output files are used.\nThe GeneLab DGE R script requires three inputs: the quantified count data from the previous (RSEM) step; sample metadata from the Investigation, Study, and Assay (ISA) tables in the ISA.zip file (provided in the GeneLab repository with each dataset) (\nSansone et al., 2012\n; \nRocca-Serra et al., 2010\n); and the organisms.csv file (\nTable S3\n), which is used to specify the organism used in the study and relevant gene annotations to load. Because samples from some GeneLab RNA-seq datasets contain ERCC spike-in and others do not, there are two versions of the GeneLab DGE R script, one for datasets with ERCC spike-in (GeneLab_DGE_wERCC.R, \nData S1\n) and one for those without (GeneLab_DGE_noERCC.R, \nData S2\n). Prior to running either script, paths to directories containing the input data and the output data location must be defined. Each script starts by defining the organism used in the study, which should be consistent with the name in the organisms.csv file so that it matches the abbreviations used in the PANTHER database (\nMi et al. 2013\n; \nThomas 2003\n) for that organism. Next, the metadata from the ISA.zip file are imported and formatted for use with the DESeq2 package. During metadata formatting, groups for comparison are defined based on experimental factors, and a sample table is created to specify the group to which each sample belongs. Next, a contrasts matrix is generated, which specifies the groups that will be compared during DGE analysis; each group is compared with every other group in a pairwise manner in both directions (i.e. spaceflight versus ground and ground versus spaceflight). This approach provides the user with the results for all possible group comparisons, allowing each user to select the most relevant comparisons for their particular scientific questions. After metadata formatting, the RSEM gene count data files from each sample are listed and re-ordered (to match the order the samples appear in the metadata), then imported with the R package, tximport (\nSoneson et al., 2015\n), and sample names are assigned. Prior to running DESeq2, a value of 1 is added to genes with lengths of zero, which is necessary to make a DESeqDataSet object. A DESeqDataSet object is then created using the formatted metadata and the count data that was imported with tximport.\nFor datasets that contain samples with ERCC spike-in, we use the GeneLab_DGE_wERCC.R script (\nData S1\n). To reduce the possibility of skewing the data during DESeq2 normalization (\nMcIntyre et al., 2011\n; \nRisso et al., 2011\n; \nConesa et al., 2016\n; \nLaw et al., 2016\n), all genes that have a sum of less than 10 counts across all samples are removed. The cutoff value of 10 is a best practice recommended by the DESeq2 tutorial on Bioconductor. These filtered data are then prepared for normalization and DGE analysis with DESeq2. Because there is no consensus for whether or not ERCC-normalization improves the accuracy of the results (\nRisso et al., 2014\n), the GeneLab project and its AWG members decided to perform the DGE analysis both with and without ERCC-normalization (for datasets with samples containing ERCC spike-in).\nTo enable DESeq2 analysis with and without considering ERCC reads, the DESeqDataSet object is used to create a DESeqDataSet object containing only ERCC reads. Because all samples must contain ERCC spike-in for ERCC-normalization, the DESeqDataSet object containing only ERCC reads is used to identify and remove any samples that do not contain ERCC reads. Next, a DESeqDataSet object containing only non-ERCC reads is created by removing rows containing ERCC reads. These data are then used for DESeq2 analysis.\nFor DESeq2 analysis with ERCC-normalization (\nData S2\n), the size factor object of the non-ERCC data is replaced with group B ERCC size factors for re-scaling in the first DESeq2 step. Group B ERCC genes contain the same concentration in both mix1 and mix 2. Therefore, only group B ERCC genes are used for generating the size factors for re-scaling duirng ERCC-normalization. For DESeq2 analysis without ERCC-normalization, the DESeq2 default algorithm is applied to the DESeqDataSet object containing only non-ERCC reads. The unnormalized and DESeq2-normalized count data as well as the sample table are then outputted as CSV files. The “Unnormalized_Counts.csv,” “Normalized_Counts.csv,” and “ERCC_Normalized_Counts.csv” files for each RNA-seq dataset are available in the GeneLab Data Repository; the “SampleTable.csv” file is used internally for verifying and validating the processed data prior to publication.\nThere are two types of hypothesis tests that can be run with DESeq2, the likelihood ratio test (LRT), which is similar to an analysis of variance (ANOVA) calculation in linear regression and allows for comparison across all groups, and the Wald test, in which the estimated standard error of a log2 fold change is used to compare differences between two groups. The DGE step of the RCP performs both of these analyses. After normalization, the DESeq2 likelihood ratio test design is applied to the normalized data (both ERCC- and nonERCC-normalized data) to generate the F statistic p value, which is similar to an ANOVA p value and reveals genes that are changed in any number of combinations of all factors defined in the experiment.\nTo prepare for building a gene/pathway annotation database, the STRINGdb (\nSzklarczyk et al., 2019\n) and PANTHER.db (\nThomas 2003\n) libraries are loaded, and the organisms.csv file is read and used to indicate the Bioconductor AnnotationData Package needed (\nHuber et al., 2015\n; \nGentleman et al., 2004\n). The current gene annotation database for the organism specified at the beginning of the R script is then loaded.\nNext, DGE tables containing normalized counts for each sample, pairwise DGE results, and current gene annotations as well as computer-readable DGE tables (that will be used for visualization) are created first with nonERCC-normalized data and then with ERCC-normalized data. For pairwise DGE analysis, first normalized count data are used to create two output tables: one that is used to create the human-readable DGE output table provided to users with processed data for each dataset and the other respective computer-readable DGE output table that contains additional columns and is used to visualize the data. Next, normalized count data are iterated through Wald Tests to generate pairwise comparisons of all groups based on the contrasts matrix that was generated during metadata formatting. The pairwise DGE analysis results are then added as columns to both DGE output tables.\nThen an annotation database is built by first defining the “keytype,” which indicates the primary type of annotation used (for most GeneLab datasets this is ENSEMBL). The keytype is then used to map to annotations in the organism-specific Bioconductor AnnotationData Package, and the following annotation columns are added to the annotation database: SYMBOL, GENENAME, ENSEMBL (if not the primary), REFSEQ, and ENTREZID. STRING and GOSLIM annotation columns are also added to the annotation database using the STRINGdb and PANTHER.db R packages, respectively. All of the aforementioned annotation columns are added to the annotation database to enable users to perform downstream analyses without having to map gene IDs themselves. Once the annotation database is complete, additional calculations are performed on the normalized count data before assembling the final DGE output tables.\nMeans and standard deviations of normalized count data for each gene across all samples, and for samples within each respective group, are calculated and added as columns to the DGE output tables. A column containing the F statistic p value, calculated previously, is also added to the DGE output tables. The following columns are added only to the computer-readable DGE output table (used for visualization): a column to indicate whether each gene (or pathway) is up- or downregulated for each pairwise comparison, a column to indicate genes that are differentially expressed using a p value cutoff of ≤0.1 and another column using a p value cutoff of ≤0.05, a column indicating the log2 of the p value for each pairwise comparison and another column indicating the log2 of the adjusted p value, both of which are used to create Volcano plots. After all columns are added to the DGE tables, both the human- and computer-readable DGE tables are combined with the current annotation database to create the complete human- and computer-readable DGE tables. An example of the complete human readable DGE tables provided with processed RNAseq datasets in the GeneLab Data Repository is shown in \nTables 1\n and \n2\n. Principal component analysis (PCA) is also performed on the normalized count data and used to create PCA plots for the GeneLab data visualization portal. DGE analysis of datasets without ERCC spike-in is performed exactly the same way as the nonERCC-normalized approach described above, except that no ERCC reads have to be removed from the DESeqDataSet object prior to DESeq analysis.\nTable 1\nDifferential gene expression output table—annotations\nTAIR\nSYMBOL\nGENENAME\nREFSEQ\nENTREZID\nSTRING_id\nGOSLIM_IDS\nAT1G01010\nANAC001\nNA\nNM_099983\n839580\n3702.AT1G01010.1\nNA\nAT1G01020\nARV1\nNA\nNM_001035846\n839569\n3702.AT1G01020.1\nGO:0005622, GO:0005737, …\nAT1G01030\nNGA3\nNA\nNM_001331244\n839321\n3702.AT1G01030.1\nNA\nAT1G01040\nASU1\nEncodes a Dicer homolog …\nNM_001197952\n839574\n3702.AT1G01040.2\nNA\nTruncated version of the differential_expression.csv file provided as GeneLab processed data for GLDS-251. The first 7 columns of the differential gene expression output table contain gene IDs and annotations (for remainder of columns, refer to \nTable 2\n).\nTable 2\nDifferential gene expression output table—statistics\nNorm. expr. (sample A)\nLog2fc (comparison A)\nP value (comparison A)\nAdj p value (comparison A)\nMean (all samples)\nStdev (all samples)\nLRT p value\nMean (group A)\nStdev (group A)\n263.864\n−0.078\n0.648\n0.848\n198.735\n31.756\n0.484\n225.550\n36.759\n200.493\n0.341\n0.033\n0.198\n147.061\n19.197\n0.740\n174.839\n24.073\n19.040\n0.691\n0.137\nNA\n11.035\n3.121\nNA\n15.706\n2.889\n644.811\n0.126\n0.366\n0.655\n669.586\n68.327\n1.000\n688.123\n76.969\nTruncated version of the differential_expression.csv file provided as GeneLab processed data for GLDS-251. Following the seven columns of gene IDs and annotations (\nTable 1\n) are normalized gene expression data for each sample (\nNorm. expr. (sample A)\n) then results from all possible pairwise comparisons, including log2 fold change (\nLog2fc (comparison A)\n), p values (\nP.value (comparison A)\n), and adjusted p values (\nAdj.p.value (comparison A)\n) calculated from the Wald Tests. Next are the average gene expression (\nMean (all samples)\n) and standard deviation (\nStdev (all samples)\n) of all samples followed by the F-statistic p value generated from the likelihood ratio test (LRT.p.value), and the last set of columns are the average gene expressions (Group.Mean) and standard deviations (Group.Stdev) of samples within each group.\nBoth the GeneLab_DGE_wERCC.R and the GeneLab_DGE_noERCC.R scripts produce the following output files: Unnormalized_Counts.csv (∗), Normalized_Counts.csv (∗), SampleTable.csv (#), contrasts.csv (∗), differential_expression.csv (∗), visualization_output_table.csv (∗∗), visualization_PCA_table.csv (∗∗) (\nFigure 5\nB). The GeneLab_DGE_wERCC.R script will also produce the following additional output files: ERCC_rawCounts_unfiltered.csv (#), ERCC_rawCounts_filtered.csv (#), ERCCnorm_contrasts.csv (∗), ERCC_Normalized_Counts.csv (∗), ERCCnorm_differential_expression.csv (∗), visualization_output_table_ERCCnorm.csv (∗∗), visualization_PCA_table_ERCCnorm.csv (∗∗) (\nTables 1\n and \n2\n).\nTo showcase the value of using a consensus pipeline and publishing the processed data from each step of the pipeline, downstream analyses were performed using processed data from select samples from RNAseq datasets hosted on GeneLab. One of the advantages of providing expression data of all samples in each dataset as well as all possible pairwise DGE comparisons is to allow users the flexibility to pick and choose which samples and which comparisons they would like to focus on. Thus, when selecting samples for downstream analysis, we exercised this flexibility and searched the GeneLab Data Repository for datasets/samples that met a specific set of criteria. These criteria were as follows: (1) datasets that evaluated the same tissue (liver) from the same mouse strain (C57BL/6) and sex (female), (2) only samples derived from animals flown in space and respective ground control samples, (3) studies that used the same preservation protocol (liver samples extracted from frozen carcasses post-mission) and library preparation method (ribo-depletion), and (4) samples that contained ERCC spike-in to evaluate outputs with and without ERCC normalization. Select samples from two GeneLab datasets, GLDS-168 and GLDS-245, met these criteria, and processed data including the Normalized_Counts.csv, differential_expression.csv, ERCC_Normalized_Counts.csv, and the ERCCnorm_differential_expression.csv files from these two datasets were used for downstream analyses.\nPrior to downstream analysis, the processed data files were filtered so that only samples that met the criteria listed above were included. Because GLDS-168 contains samples from both the Rodent Research 1 (RR-1) and RR-3 missions and only the RR-1 mission met our first criteria of using the C57BL/6 mouse strain, RR-3 samples were removed from the process data files. GLDS-168 processed data files were subsequently filtered to remove all samples, except spaceflight (FLT) and respective ground control (GC) samples, to meet the second criteria listed above. Lastly, because GLDS-168 contains a set of FLT and GC samples that were spiked with ERCC and another set in which ERCC was not added, the later set of samples were removed to meet the fourth criteria. GLDS-245 contains liver samples from the RR-6 mission, which included a set of animals that were returned to earth alive after ∼30 days of spaceflight and another set of animals that remained in space (aboard the ISS) for a total of ∼60 days before being sacrificed aboard the ISS (note that there were respective control samples for each set of spaceflight animals described). The former set of animals had their livers dissected immediately after euthanasia, whereas livers from the latter set of animals were frozen \nin situ\n and dissected from frozen carcasses after return to earth. Thus, only the later (ISS-terminal) set of FLT and respective GC samples met criteria 2 and 3, so the GLDS-245 processed data files were filtered to remove all other samples. In addition, because the downstream analyses focused on the differences between FLT and GC samples in these two datasets, all other comparisons were removed from the differential_expression.csv and ERCCnorm_differential_expression.csv files prior to analysis.\nThe filtered processed data files (available in Mendeley Data, Mendeley Data: \nhttps://doi.org/10.17632/fv3kd6h7k4.1\n) were then used to create Principal Component Analysis (PCA) plots (\nFigures 6\nA, 6B, \nS1\nA, and S1B), heatmaps containing the top 30 most significant FLT versus GC differentially expressed (and annotated) genes (adj. p value <0.05 and |log2FC| > 1) (\nFigures 6\nC, 6D, \nS1\nC, and S1D), and to evaluate FLT versus GC gene ontology (GO) differences using Gene Set Enrichment (GSEA) analysis (\nTables 3\n and \nS5\n). These results can then be further evaluated to identify similarities and differences in gene expression between these two studies and draw novel conclusions about the effects of spaceflight that are consistent across spaceflight experiments.\nFigure 6\nGlobal and differential gene expression in spaceflight versus ground control liver samples from GeneLab datasets\n(A and B) Principal component analysis of global gene expression in spaceflight (FLT) and respective ground control (GC) liver samples from the (A) Rodent Research 1 (RR-1) NASA Validation mission (GLDS-168) and (B) RR-6 ISS-terminal mission (GLDS-245). Plots were generated using data in the normalized counts tables for each respective dataset on the NASA GeneLab Data Repository.\n(C and D) Heatmaps showing the top 30 differentially expressed genes in spaceflight (FLT) versus ground control (GC) liver samples from the (C) Rodent Research 1 (RR-1) NASA Validation mission (GLDS-168) and (D) RR-6 ISS-terminal mission (GLDS-245). Heatmaps were generated using data in the differential expression tables for each respective dataset on the NASA GeneLab Data Repository and are colored by relative expression. Adj. p value < 0.05 and |log2FC| > 1. All samples included were derived from frozen carcasses post-mission and utilized the ribo-depletion library preparation method.\nTable 3\nComparison of gene ontology in spaceflight versus ground control liver samples from GeneLab datasets\nGeneLab dataset\n# Enriched GO terms (NOM p < 0.01)\n# Enriched GO terms (NOM p < 0.01 & FDR<0.5)\n# Enriched GO terms (NOM p < 0.01 & FDR<0.25)\nGLDS-168\n71, 135\n0, 132\n0, 0\nGLDS-245\n21, 24\n2, 6\n1, 0\nThe number of enriched gene ontology (GO) terms identified by Gene Set Enrichment Analysis (GSEA, phenotype permutation) was evaluated in spaceflight (FLT) versus ground control (GC) liver samples from the Rodent Research 1 (RR-1) NASA Validation mission (GLDS-168), and RR-6 ISS-terminal mission (GLDS-245). For GO terms, the number on the left corresponds to GO terms enriched in FLT samples and the number on the right corresponds to GO terms enriched in GC samples. These data were generated using the normalized counts for each respective dataset on the NASA GeneLab Data Repository. All samples included were derived from frozen carcasses post-mission and utilized the ribo-depletion library preparation method. GLDS-168, FLT n = 5 and GC n = 5; GLDS-245, FLT n = 10 and GC n = 10. p values and FDR values are indicated.",
    "data_pre-processing:_quality_control_and_trimming": "Data pre-processing: quality control and trimming\nThere are three distinct steps to the RCP, the first of which is data preprocessing (\nFigure 2\nA). The pipeline begins with quality control (QC) of raw FASTQ files from a short-read Illumina sequencer using the FastQC software (\nAndrews, 2010\n) (\nFigure 2\nB). FastQC is one of the most widely used QC programs for short-read sequencing data. It provides information that can be used to assess sample and sequencing quality, including base statistics, per base sequencing quality, per sequence quality scores, per base sequence content, per base GC content, per sequence GC content, per base N content, sequence length distributions, sequence duplication levels, overrepresented sequences, and k-mer content.\nFigure 2\nData preprocessing (pipeline step 1): quality control and trimming\n(A) Data preprocessing pipeline. FastQ files from Illumina base-calling software are quality checked using FastQC and MultiQC. Data are then trimmed using TrimGalore and are re-checked for quality; (B) flags used for FastQC program; (C) flags used for MultiQC program; (D) flags used for TrimGalore program; trimmed reads (∗fastq.gz) are then used as input data for FastQC (B) followed by MultiQC (C) to generate trimmed read quality metrics. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS Repository.\nThe FastQC program is run on each individual sample file. However, reviewing the FastQC results for each sample file can be tedious and time consuming. Experiments typically have many sample files (biological and/or technical replicates) for multiple experimental conditions (spaceflight, ground control, etc.). For this reason, we also use the MultiQC package (\nEwels et al., 2016\n) (\nFigure 2\nC) to create a summary statistics report that includes the same quality control result categories from FastQC across all experiment samples.\nAfter performing quality control on the raw FASTQ data, reads are trimmed using TrimGalore (\nKrueger 2019\n) to remove sequencing adapters and low-quality bases that would disrupt read mapping during the data processing pipeline step (\nFigure 2\nD). TrimGalore is a wrapper program that uses the cutadapt program (\nMartin 2011\n) for read trimming. TrimGalore was selected for the RCP due to its simplified command line interface, thorough output of trimming metrics, and ability to automatically detect adapters. In this step, bases that are part of a sequencing adapter or of low quality are removed from each read, and reads that become too short are subsequently removed. After trimming, the quality control programs, FastQC and MultiQC, are again run on the trimmed FASTQ files for viewing the quality control metrics of the reads that will be used for data processing. Once the data have been preprocessed, the sequenced reads are ready for mapping and quantification.",
    "data_processing:_read_mapping_and_sample_quantification": "Data processing: read mapping and sample quantification\nIn the data processing step (\nFigure 1\n; Step 2A), the trimmed reads are first aligned to the reference genome (\nFigure 3\nA) with STAR, a splice-aware aligner (\nDobin et al., 2013\n). STAR must be run in two steps. The first step is to create indexed genome files (\nFigure 3\nB). These files are used to assist read mapping and only need to be generated once for each reference genome file. This step requires reference FASTA and GTF files (\nTable S2\n). Some datasets include the External RNA Control Consortium (ERCC) spike-in control—a pool of 96 synthetic RNAs with various lengths and GC content covering a 2\n20\n concentration range (\nJiang et al., 2011\n). If ERCC spike-ins were included, the spike-in FASTA and GTF files are appended to the reference FASTA and GTF files, respectively. The second step of STAR mapping is to use the indexed reference genome and the trimmed reads from the preprocessing step in order to map the reads to the genome and the transcriptome (\nFigure 3\nC). STAR will also produce genome mapped data, which can optionally be used to find reads that map outside of annotated reference transcripts. STAR mapping output data are in Binary Alignment Map (BAM) format, which has a separate entry for each mapped read and states which transcript each read is mapped to. In order to improve the detection and quantification of splice sites, STAR is run in “two-pass mode.” Here, splice sites are detected in the initial mapping to the reference and used to build a new reference that includes these splice sites. Reads are then re-mapped to this dynamically generated reference to improve the quantification of splice isoforms (\nDobin et al., 2013\n). Users are provided with these results (as per sample SJ.out files) for further analysis of differential splicing.\nFigure 3\nData processing (pipeline step 2A): read mapping\n(A) Data processing pipeline. Trimmed reads are mapped to their reference genome and transcriptome with STAR. Gene counts are then quantified with RSEM; (B) flags used for generating the indexed STAR reference files; (C) flags used for mapping reads with STAR. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS Repository.\nThe second part of processing is quantifying the number of reads mapped to each annotated transcript and gene (\nFigure 1\nA; Step 2B, \nFigure 4\nA). For this task, the RCP uses RSEM (\nLi and Dewey 2011\n). The main reasons for using RSEM are its ability to account for reads that map to multiple transcripts and distinguish gene isoforms. In short-read sequencing experiments it is likely that some number of reads will map to multiple regions in the genome. RSEM computes maximum likelihood abundance estimates to split the read count across multiple genes. Similar to STAR, RSEM is run in two distinct phases (\nFigure 4\nA). The first phase uses the reference genome and GTF files (with or without ERCC as appropriate) (\nTable S2\n) to prepare indexed genome files (\nFigure 4\nB). The second phase uses the indexed files and the mapped reads from STAR to assign counts to each gene (\nFigure 4\nC). There are two output files generated for each sample: counts assigned to genes and counts assigned to isoforms. Gene counts are used to calculate differential gene expression. Isoform counts are also generated as an option to look at differential isoform expression but are not used during differential gene expression calculation in the RCP. Once the RSEM count files are generated, the data are used to compute differentially expressed genes. A list of the reference genomes used in the GeneLab pipeline is available in \nTable S2\n . These reference genomes were the most recent releases at the time each STAR and RSEM indexed references were created. Although it is possible to run STAR mapping through the RSEM toolkit, we elected not to do this because the alignment parameters used in this case are from ENCODE's STAR-RSEM pipeline and are not customizable. Thus, we would have been precluded from using the precise mapping parameters agreed to by the GeneLab AWG.\nFigure 4\nData processing (pipeline step 2B): gene quantification\n(A) Data processing pipeline. Mapping results from STAR are quantified by RSEM; (B) parameters for RSEM indexed reference files generation; (C) parameters for quantifying gene and isoform counts with RSEM. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS repository.\nWe elected to adopt a mapping-based approach rather than rapidly quantifying the reads via a k-mer-based counting algorithm, pseudo-aligners, or a quasi-mapping method that utilizes RNA-seq inference procedures such as Kallisto (\nBray et al., 2016\n) or Salmon (\nPatro et al., 2017\n) despite their speed advantages. This is because alignment-free quantification tools do not accurately quantify low-abundant and small RNAs especially when biological variation is present (\nWu et al., 2018\n). Furthermore, alignment of reads allows for additional analyses beyond transcript and gene quantification such as measurement of gene body coverage and detection of novel transcripts.\nThere are several alignment-based mapping tools available and each has advantages and disadvantages. An alignment tool that is sensitive to splice-isoforms is critical to accurately identify how expression of splice-isoforms is affected by the spaceflight environment. DNA-specific aligners such as BWA (\nLi and Durbin 2009\n) and Bowtie (\nLangmead et al., 2009\n) cannot handle intron-sized gaps and thus an RNA-seq-specific aligner is needed (\nBaruzzo et al., 2017\n). In addition to splice-awareness, when selecting an aligner the following criteria were also considered: ability to input both single- and paired-end reads, handle strand-specific data, applicability to a variety of different model organisms with both low- and high-complexity genomic regions, efficient runtime and memory usage, ability to identify chimeric reads, high sensitivity, low rate of false discovery, and ability to output both genome and transcriptome alignments. Several studies have been conducted to compare the wide variety of available RNA-seq specific alignment tools, and of these, the STAR aligner consistently performs better than or on par with the tools tested for the indicated criteria (\nBaruzzo et al., 2017\n; \nSchaarschmidt et al., 2020\n; \nRaplee et al. 2019\n).",
    "differential_gene_expression_calculations_and_addition_of_ge": "Differential gene expression calculations and addition of gene annotations\nOnce reads have been mapped and quantified, differential expression analysis is performed using the DESeq2 R package (\nFigure 1\n; Step 3, \nFigure 5\nA). Unlike the previous steps, a custom R script (GeneLab_DGE_wERCC.R or GeneLab_DGE_noERCC.R) (\nData S1\nand \nS2\n) is used to run DESeq2; to create both unnormalized and normalized counts tables; and to generate a differential gene expression (DGE) output table containing normalized counts for each sample, DGE results, and gene annotations (\nFigure 5\nB). The GeneLab DGE R script also creates computer-readable tables that are used by the GeneLab visualization portal to generate various plots so users can easily view and begin interpreting the processed data. These scripts are provided in the NASA GeneLab_Data_Processing Github repository (\nhttps://github.com/nasa/GeneLab_Data_Processing\n). In the following sections we describe each step of these scripts in order.\nFigure 5\nDifferential gene expression calculation (pipeline step 3)\n(A) Data processing pipeline. The R program DESeq2 is run in order to determine which genes are differentially expressed between experimental conditions using gene count files from RSEM.\n(B) Output files generated. The table columns distinguish which script produces each output. The columns distinguish how those output files are used.\nThe GeneLab DGE R script requires three inputs: the quantified count data from the previous (RSEM) step; sample metadata from the Investigation, Study, and Assay (ISA) tables in the ISA.zip file (provided in the GeneLab repository with each dataset) (\nSansone et al., 2012\n; \nRocca-Serra et al., 2010\n); and the organisms.csv file (\nTable S3\n), which is used to specify the organism used in the study and relevant gene annotations to load. Because samples from some GeneLab RNA-seq datasets contain ERCC spike-in and others do not, there are two versions of the GeneLab DGE R script, one for datasets with ERCC spike-in (GeneLab_DGE_wERCC.R, \nData S1\n) and one for those without (GeneLab_DGE_noERCC.R, \nData S2\n). Prior to running either script, paths to directories containing the input data and the output data location must be defined. Each script starts by defining the organism used in the study, which should be consistent with the name in the organisms.csv file so that it matches the abbreviations used in the PANTHER database (\nMi et al. 2013\n; \nThomas 2003\n) for that organism. Next, the metadata from the ISA.zip file are imported and formatted for use with the DESeq2 package. During metadata formatting, groups for comparison are defined based on experimental factors, and a sample table is created to specify the group to which each sample belongs. Next, a contrasts matrix is generated, which specifies the groups that will be compared during DGE analysis; each group is compared with every other group in a pairwise manner in both directions (i.e. spaceflight versus ground and ground versus spaceflight). This approach provides the user with the results for all possible group comparisons, allowing each user to select the most relevant comparisons for their particular scientific questions. After metadata formatting, the RSEM gene count data files from each sample are listed and re-ordered (to match the order the samples appear in the metadata), then imported with the R package, tximport (\nSoneson et al., 2015\n), and sample names are assigned. Prior to running DESeq2, a value of 1 is added to genes with lengths of zero, which is necessary to make a DESeqDataSet object. A DESeqDataSet object is then created using the formatted metadata and the count data that was imported with tximport.\nFor datasets that contain samples with ERCC spike-in, we use the GeneLab_DGE_wERCC.R script (\nData S1\n). To reduce the possibility of skewing the data during DESeq2 normalization (\nMcIntyre et al., 2011\n; \nRisso et al., 2011\n; \nConesa et al., 2016\n; \nLaw et al., 2016\n), all genes that have a sum of less than 10 counts across all samples are removed. The cutoff value of 10 is a best practice recommended by the DESeq2 tutorial on Bioconductor. These filtered data are then prepared for normalization and DGE analysis with DESeq2. Because there is no consensus for whether or not ERCC-normalization improves the accuracy of the results (\nRisso et al., 2014\n), the GeneLab project and its AWG members decided to perform the DGE analysis both with and without ERCC-normalization (for datasets with samples containing ERCC spike-in).\nTo enable DESeq2 analysis with and without considering ERCC reads, the DESeqDataSet object is used to create a DESeqDataSet object containing only ERCC reads. Because all samples must contain ERCC spike-in for ERCC-normalization, the DESeqDataSet object containing only ERCC reads is used to identify and remove any samples that do not contain ERCC reads. Next, a DESeqDataSet object containing only non-ERCC reads is created by removing rows containing ERCC reads. These data are then used for DESeq2 analysis.\nFor DESeq2 analysis with ERCC-normalization (\nData S2\n), the size factor object of the non-ERCC data is replaced with group B ERCC size factors for re-scaling in the first DESeq2 step. Group B ERCC genes contain the same concentration in both mix1 and mix 2. Therefore, only group B ERCC genes are used for generating the size factors for re-scaling duirng ERCC-normalization. For DESeq2 analysis without ERCC-normalization, the DESeq2 default algorithm is applied to the DESeqDataSet object containing only non-ERCC reads. The unnormalized and DESeq2-normalized count data as well as the sample table are then outputted as CSV files. The “Unnormalized_Counts.csv,” “Normalized_Counts.csv,” and “ERCC_Normalized_Counts.csv” files for each RNA-seq dataset are available in the GeneLab Data Repository; the “SampleTable.csv” file is used internally for verifying and validating the processed data prior to publication.\nThere are two types of hypothesis tests that can be run with DESeq2, the likelihood ratio test (LRT), which is similar to an analysis of variance (ANOVA) calculation in linear regression and allows for comparison across all groups, and the Wald test, in which the estimated standard error of a log2 fold change is used to compare differences between two groups. The DGE step of the RCP performs both of these analyses. After normalization, the DESeq2 likelihood ratio test design is applied to the normalized data (both ERCC- and nonERCC-normalized data) to generate the F statistic p value, which is similar to an ANOVA p value and reveals genes that are changed in any number of combinations of all factors defined in the experiment.\nTo prepare for building a gene/pathway annotation database, the STRINGdb (\nSzklarczyk et al., 2019\n) and PANTHER.db (\nThomas 2003\n) libraries are loaded, and the organisms.csv file is read and used to indicate the Bioconductor AnnotationData Package needed (\nHuber et al., 2015\n; \nGentleman et al., 2004\n). The current gene annotation database for the organism specified at the beginning of the R script is then loaded.\nNext, DGE tables containing normalized counts for each sample, pairwise DGE results, and current gene annotations as well as computer-readable DGE tables (that will be used for visualization) are created first with nonERCC-normalized data and then with ERCC-normalized data. For pairwise DGE analysis, first normalized count data are used to create two output tables: one that is used to create the human-readable DGE output table provided to users with processed data for each dataset and the other respective computer-readable DGE output table that contains additional columns and is used to visualize the data. Next, normalized count data are iterated through Wald Tests to generate pairwise comparisons of all groups based on the contrasts matrix that was generated during metadata formatting. The pairwise DGE analysis results are then added as columns to both DGE output tables.\nThen an annotation database is built by first defining the “keytype,” which indicates the primary type of annotation used (for most GeneLab datasets this is ENSEMBL). The keytype is then used to map to annotations in the organism-specific Bioconductor AnnotationData Package, and the following annotation columns are added to the annotation database: SYMBOL, GENENAME, ENSEMBL (if not the primary), REFSEQ, and ENTREZID. STRING and GOSLIM annotation columns are also added to the annotation database using the STRINGdb and PANTHER.db R packages, respectively. All of the aforementioned annotation columns are added to the annotation database to enable users to perform downstream analyses without having to map gene IDs themselves. Once the annotation database is complete, additional calculations are performed on the normalized count data before assembling the final DGE output tables.\nMeans and standard deviations of normalized count data for each gene across all samples, and for samples within each respective group, are calculated and added as columns to the DGE output tables. A column containing the F statistic p value, calculated previously, is also added to the DGE output tables. The following columns are added only to the computer-readable DGE output table (used for visualization): a column to indicate whether each gene (or pathway) is up- or downregulated for each pairwise comparison, a column to indicate genes that are differentially expressed using a p value cutoff of ≤0.1 and another column using a p value cutoff of ≤0.05, a column indicating the log2 of the p value for each pairwise comparison and another column indicating the log2 of the adjusted p value, both of which are used to create Volcano plots. After all columns are added to the DGE tables, both the human- and computer-readable DGE tables are combined with the current annotation database to create the complete human- and computer-readable DGE tables. An example of the complete human readable DGE tables provided with processed RNAseq datasets in the GeneLab Data Repository is shown in \nTables 1\n and \n2\n. Principal component analysis (PCA) is also performed on the normalized count data and used to create PCA plots for the GeneLab data visualization portal. DGE analysis of datasets without ERCC spike-in is performed exactly the same way as the nonERCC-normalized approach described above, except that no ERCC reads have to be removed from the DESeqDataSet object prior to DESeq analysis.\nTable 1\nDifferential gene expression output table—annotations\nTAIR\nSYMBOL\nGENENAME\nREFSEQ\nENTREZID\nSTRING_id\nGOSLIM_IDS\nAT1G01010\nANAC001\nNA\nNM_099983\n839580\n3702.AT1G01010.1\nNA\nAT1G01020\nARV1\nNA\nNM_001035846\n839569\n3702.AT1G01020.1\nGO:0005622, GO:0005737, …\nAT1G01030\nNGA3\nNA\nNM_001331244\n839321\n3702.AT1G01030.1\nNA\nAT1G01040\nASU1\nEncodes a Dicer homolog …\nNM_001197952\n839574\n3702.AT1G01040.2\nNA\nTruncated version of the differential_expression.csv file provided as GeneLab processed data for GLDS-251. The first 7 columns of the differential gene expression output table contain gene IDs and annotations (for remainder of columns, refer to \nTable 2\n).\nTable 2\nDifferential gene expression output table—statistics\nNorm. expr. (sample A)\nLog2fc (comparison A)\nP value (comparison A)\nAdj p value (comparison A)\nMean (all samples)\nStdev (all samples)\nLRT p value\nMean (group A)\nStdev (group A)\n263.864\n−0.078\n0.648\n0.848\n198.735\n31.756\n0.484\n225.550\n36.759\n200.493\n0.341\n0.033\n0.198\n147.061\n19.197\n0.740\n174.839\n24.073\n19.040\n0.691\n0.137\nNA\n11.035\n3.121\nNA\n15.706\n2.889\n644.811\n0.126\n0.366\n0.655\n669.586\n68.327\n1.000\n688.123\n76.969\nTruncated version of the differential_expression.csv file provided as GeneLab processed data for GLDS-251. Following the seven columns of gene IDs and annotations (\nTable 1\n) are normalized gene expression data for each sample (\nNorm. expr. (sample A)\n) then results from all possible pairwise comparisons, including log2 fold change (\nLog2fc (comparison A)\n), p values (\nP.value (comparison A)\n), and adjusted p values (\nAdj.p.value (comparison A)\n) calculated from the Wald Tests. Next are the average gene expression (\nMean (all samples)\n) and standard deviation (\nStdev (all samples)\n) of all samples followed by the F-statistic p value generated from the likelihood ratio test (LRT.p.value), and the last set of columns are the average gene expressions (Group.Mean) and standard deviations (Group.Stdev) of samples within each group.\nBoth the GeneLab_DGE_wERCC.R and the GeneLab_DGE_noERCC.R scripts produce the following output files: Unnormalized_Counts.csv (∗), Normalized_Counts.csv (∗), SampleTable.csv (#), contrasts.csv (∗), differential_expression.csv (∗), visualization_output_table.csv (∗∗), visualization_PCA_table.csv (∗∗) (\nFigure 5\nB). The GeneLab_DGE_wERCC.R script will also produce the following additional output files: ERCC_rawCounts_unfiltered.csv (#), ERCC_rawCounts_filtered.csv (#), ERCCnorm_contrasts.csv (∗), ERCC_Normalized_Counts.csv (∗), ERCCnorm_differential_expression.csv (∗), visualization_output_table_ERCCnorm.csv (∗∗), visualization_PCA_table_ERCCnorm.csv (∗∗) (\nTables 1\n and \n2\n).\nTo showcase the value of using a consensus pipeline and publishing the processed data from each step of the pipeline, downstream analyses were performed using processed data from select samples from RNAseq datasets hosted on GeneLab. One of the advantages of providing expression data of all samples in each dataset as well as all possible pairwise DGE comparisons is to allow users the flexibility to pick and choose which samples and which comparisons they would like to focus on. Thus, when selecting samples for downstream analysis, we exercised this flexibility and searched the GeneLab Data Repository for datasets/samples that met a specific set of criteria. These criteria were as follows: (1) datasets that evaluated the same tissue (liver) from the same mouse strain (C57BL/6) and sex (female), (2) only samples derived from animals flown in space and respective ground control samples, (3) studies that used the same preservation protocol (liver samples extracted from frozen carcasses post-mission) and library preparation method (ribo-depletion), and (4) samples that contained ERCC spike-in to evaluate outputs with and without ERCC normalization. Select samples from two GeneLab datasets, GLDS-168 and GLDS-245, met these criteria, and processed data including the Normalized_Counts.csv, differential_expression.csv, ERCC_Normalized_Counts.csv, and the ERCCnorm_differential_expression.csv files from these two datasets were used for downstream analyses.\nPrior to downstream analysis, the processed data files were filtered so that only samples that met the criteria listed above were included. Because GLDS-168 contains samples from both the Rodent Research 1 (RR-1) and RR-3 missions and only the RR-1 mission met our first criteria of using the C57BL/6 mouse strain, RR-3 samples were removed from the process data files. GLDS-168 processed data files were subsequently filtered to remove all samples, except spaceflight (FLT) and respective ground control (GC) samples, to meet the second criteria listed above. Lastly, because GLDS-168 contains a set of FLT and GC samples that were spiked with ERCC and another set in which ERCC was not added, the later set of samples were removed to meet the fourth criteria. GLDS-245 contains liver samples from the RR-6 mission, which included a set of animals that were returned to earth alive after ∼30 days of spaceflight and another set of animals that remained in space (aboard the ISS) for a total of ∼60 days before being sacrificed aboard the ISS (note that there were respective control samples for each set of spaceflight animals described). The former set of animals had their livers dissected immediately after euthanasia, whereas livers from the latter set of animals were frozen \nin situ\n and dissected from frozen carcasses after return to earth. Thus, only the later (ISS-terminal) set of FLT and respective GC samples met criteria 2 and 3, so the GLDS-245 processed data files were filtered to remove all other samples. In addition, because the downstream analyses focused on the differences between FLT and GC samples in these two datasets, all other comparisons were removed from the differential_expression.csv and ERCCnorm_differential_expression.csv files prior to analysis.\nThe filtered processed data files (available in Mendeley Data, Mendeley Data: \nhttps://doi.org/10.17632/fv3kd6h7k4.1\n) were then used to create Principal Component Analysis (PCA) plots (\nFigures 6\nA, 6B, \nS1\nA, and S1B), heatmaps containing the top 30 most significant FLT versus GC differentially expressed (and annotated) genes (adj. p value <0.05 and |log2FC| > 1) (\nFigures 6\nC, 6D, \nS1\nC, and S1D), and to evaluate FLT versus GC gene ontology (GO) differences using Gene Set Enrichment (GSEA) analysis (\nTables 3\n and \nS5\n). These results can then be further evaluated to identify similarities and differences in gene expression between these two studies and draw novel conclusions about the effects of spaceflight that are consistent across spaceflight experiments.\nFigure 6\nGlobal and differential gene expression in spaceflight versus ground control liver samples from GeneLab datasets\n(A and B) Principal component analysis of global gene expression in spaceflight (FLT) and respective ground control (GC) liver samples from the (A) Rodent Research 1 (RR-1) NASA Validation mission (GLDS-168) and (B) RR-6 ISS-terminal mission (GLDS-245). Plots were generated using data in the normalized counts tables for each respective dataset on the NASA GeneLab Data Repository.\n(C and D) Heatmaps showing the top 30 differentially expressed genes in spaceflight (FLT) versus ground control (GC) liver samples from the (C) Rodent Research 1 (RR-1) NASA Validation mission (GLDS-168) and (D) RR-6 ISS-terminal mission (GLDS-245). Heatmaps were generated using data in the differential expression tables for each respective dataset on the NASA GeneLab Data Repository and are colored by relative expression. Adj. p value < 0.05 and |log2FC| > 1. All samples included were derived from frozen carcasses post-mission and utilized the ribo-depletion library preparation method.\nTable 3\nComparison of gene ontology in spaceflight versus ground control liver samples from GeneLab datasets\nGeneLab dataset\n# Enriched GO terms (NOM p < 0.01)\n# Enriched GO terms (NOM p < 0.01 & FDR<0.5)\n# Enriched GO terms (NOM p < 0.01 & FDR<0.25)\nGLDS-168\n71, 135\n0, 132\n0, 0\nGLDS-245\n21, 24\n2, 6\n1, 0\nThe number of enriched gene ontology (GO) terms identified by Gene Set Enrichment Analysis (GSEA, phenotype permutation) was evaluated in spaceflight (FLT) versus ground control (GC) liver samples from the Rodent Research 1 (RR-1) NASA Validation mission (GLDS-168), and RR-6 ISS-terminal mission (GLDS-245). For GO terms, the number on the left corresponds to GO terms enriched in FLT samples and the number on the right corresponds to GO terms enriched in GC samples. These data were generated using the normalized counts for each respective dataset on the NASA GeneLab Data Repository. All samples included were derived from frozen carcasses post-mission and utilized the ribo-depletion library preparation method. GLDS-168, FLT n = 5 and GC n = 5; GLDS-245, FLT n = 10 and GC n = 10. p values and FDR values are indicated.",
    "discussion": "Discussion\nThe differentially expressed genes calculated by the RCP can be further explored with a variety of tools designed for higher-order analysis. For example, there are tools that can look for enriched pathways, gene ontology terms, or protein and/or metabolite networks. Popular software tools among the GeneLab working group members include WebGestalt (\nLiao et al., 2019\n), STRING (\nSzklarczyk et al., 2019\n), GSEA (\nSubramanian et al., 2005\n), PIANO (\nVäremo et al. 2013\n), Reactome (\nSzklarczyk et al., 2019\n), and ToppFun (\nChen et al., 2009\n). There is no universal consensus on which tools are the most useful for higher-order analysis (\nNguyen et al., 2019\n). RCP users are encouraged to try multiple tools in order to analyze their data from a variety of perspectives.\nThe RCP has been designed to handle sequencing experiments that either lack or include the ERCC RNA spike-in mix—a set of 96 polyadenylated RNAs that can be used during differential gene expression calculation to normalize read counts across samples (\nMunro et al., 2014\n). However, the use of normalization according to ERCC spike-ins remains controversial among AWG members, and Munro et al. suggested its usage only for determining limit of detection of ratio (LODR), expression ratio variability, and measurement bias (\nMunro et al., 2014\n). For this reason, ERCC normalization remains optional in the GeneLab pipeline, and both kinds of DGE outputs are provided in the GeneLab database. In addition, ERCC spike-in could have two other usages. First, it allows us to evaluate whether normalization succeeded in removing systemic bias between libraries by using methods such as Rlog and VST when normalizing the spike-in RNAs along with all other genes. Second, most normalization methods of RNA-seq data assume that most genes are not differentially expressed toward one direction. Comparing spike-in measurements between libraries will help us to estimate the validity of this assumption.\nA high number of biological replicates can increase certainty in the differentially expressed genes determined by the RCP. However, conducting experiments in spaceflight often limits the number of biological replicates that a researcher can include. Therefore, it is important to note that at least three biological replicates are required for the pipeline, specifically for DESeq2, to perform its statistical methods. However, at least six replicates are suggested in order to minimize the false discovery rate (FDR) (\nSchurch et al., 2016\n). Finally, RNA-seq datasets hosted on GeneLab that do not contain biological replicates are only processed up until unnormalized (raw) counts are obtained, the step right before DESeq2 is used for DGE calculation.\nMore advanced RCP users might have additional data inquiries that fall beyond the scope of this pipeline. For this reason, there are two parts of the pipeline that include additional output that are not used in our differential gene expression computation. The first is in the output from STAR, mapping output is also provided in genomic coordinates. This is useful for obtaining reads that are mapped outside of the reference transcriptome. For example, this may be used to find novel genes, transcripts, or exons that have not yet been annotated by consortiums. The second part of the pipeline with alternative output files is RSEM. This also provides transcript-level counts that can be used to investigate differential isoform expression. Moreover, intermediate files are provided as outputs to allow users to use components of the pipeline that they find useful.\nThe GeneLab database also includes other types of transcriptomic data. As discussed in this article, the RCP is not used for microarray data that are fundamentally different, and the AWG is still debating the best approach for cross-dataset comparisons between microarrays. GeneLab also accepts data from long read experiments, such as those produced by Pacific Biosciences' (PacBio) single-molecule real-time (SMRT) sequencing (\nRoberts et al. 2013\n) and Oxford Nanopore Technologies' (ONT) nanopore sequencing (\nJain et al., 2016\n). Long-read data would be processed with similar steps to the RCP but will require tools specifically designed for the intricacies of long-read data, such as reads that contain multiple splice junctions and reads that currently have a higher base-calling error rate. Currently, long-reads are typically used for DNA sequencing and were recently highlighted on board of the ISS using ONT for de novo assembly of the \nEscherichia coli\n genome from raw reads (\nCastro-Wallace et al., 2017\n). However, even though throughput and accuracy remain far inferior to short-reads, long-reads offer some advantages for RNA-seq as well, with less ambiguity for genes and isoforms detection, much faster mapping, potential identification of genes not yet known from reference genomes, and eventually less bias in DGE.\nTo conclude, the RCP is specifically designed for RNA-seq data from short-read sequencers and has been developed in order to encourage and facilitate analysis of spaceflight multi-omic data. The creation of the RCP by a large community of scientists (GeneLab AWG: \nhttps://genelab.nasa.gov/awg\n) and the sharing of pipeline details in a peer-reviewed article provide analysis transparency and enable data reproducibility.\nLimitations of the study\nThe results of this study are limited to short-read RNA-seq and are not applicable to other transcriptomic profiling methods (e.g. microarray, long-read RNA-seq). In addition, the pipeline cannot compensate for poor library preparation technique or inadequate sample size. Sample preservation protocols between datasets need to also be evaluated, because variations in sample preservation protocol could lead to poor correlation between studies that are otherwise identical (\nLai Polo et al., 2020\n). The number of sequenced reads may also be a limiting factor in the usefulness and accuracy of the differentially expressed genes calculated by DESeq2 and, similarly, during splice isoform analysis.\nNote that this article does not discuss strategies and pipelines regarding older transcriptomics data in GeneLab (i.e. more than 100 microarray datasets), as it is much more challenging to provide meta-analysis with microarrays, which are prone to strong batch effects and gene lists that are platform dependent. Future efforts of GeneLab and the AWG will address microarray pipelines.\nIn the future, we will add functionality to process unique molecular identifiers (UMIs) that can identify PCR duplicates using tools such as UMI tools (\nSmith et al. 2017\n). This will allow PCR duplicates to be removed after mapping and before quantification.\nIn addition, transcriptomic data will be integrated with proteomic and metabolomics data; this will help further understand the significance of gene expression changes to metabolic “fitness” in the spaceflight environment.\nResource availability\nLead contact\nJonathan M. Galazka.\nMaterials availability\nNo unique reagents were generated in this study.\nData and code availability\nSpaceflight-relevant RNA-seq data are located in the GeneLab database (\nhttps://genelab-data.ndc.nasa.gov/genelab/projects\n). All software packages are open source and are linked in the methods section. Instructions for installing packages using Conda are provided on Github (\nhttps://github.com/nasa/GeneLab_Data_Processing/tree/master/RNAseq/RNAseq_Tool_Instal\n). Custom R scripts for DESeq2 are included as supplemental information and are available in the Github repository GeneLab_Data_Processing (\nhttps://github.com/nasa/GeneLab_Data_Processing\n). Original data have been deposited to Mendeley Data: \nhttps://doi.org/10.17632/fv3kd6h7k4.1\n).",
    "limitations_of_the_study": "Limitations of the study\nThe results of this study are limited to short-read RNA-seq and are not applicable to other transcriptomic profiling methods (e.g. microarray, long-read RNA-seq). In addition, the pipeline cannot compensate for poor library preparation technique or inadequate sample size. Sample preservation protocols between datasets need to also be evaluated, because variations in sample preservation protocol could lead to poor correlation between studies that are otherwise identical (\nLai Polo et al., 2020\n). The number of sequenced reads may also be a limiting factor in the usefulness and accuracy of the differentially expressed genes calculated by DESeq2 and, similarly, during splice isoform analysis.\nNote that this article does not discuss strategies and pipelines regarding older transcriptomics data in GeneLab (i.e. more than 100 microarray datasets), as it is much more challenging to provide meta-analysis with microarrays, which are prone to strong batch effects and gene lists that are platform dependent. Future efforts of GeneLab and the AWG will address microarray pipelines.\nIn the future, we will add functionality to process unique molecular identifiers (UMIs) that can identify PCR duplicates using tools such as UMI tools (\nSmith et al. 2017\n). This will allow PCR duplicates to be removed after mapping and before quantification.\nIn addition, transcriptomic data will be integrated with proteomic and metabolomics data; this will help further understand the significance of gene expression changes to metabolic “fitness” in the spaceflight environment.",
    "resource_availability": "Resource availability\nLead contact\nJonathan M. Galazka.",
    "lead_contact": "Lead contact\nJonathan M. Galazka.",
    "materials_availability": "Materials availability\nNo unique reagents were generated in this study.\nData and code availability\nSpaceflight-relevant RNA-seq data are located in the GeneLab database (\nhttps://genelab-data.ndc.nasa.gov/genelab/projects\n). All software packages are open source and are linked in the methods section. Instructions for installing packages using Conda are provided on Github (\nhttps://github.com/nasa/GeneLab_Data_Processing/tree/master/RNAseq/RNAseq_Tool_Instal\n). Custom R scripts for DESeq2 are included as supplemental information and are available in the Github repository GeneLab_Data_Processing (\nhttps://github.com/nasa/GeneLab_Data_Processing\n). Original data have been deposited to Mendeley Data: \nhttps://doi.org/10.17632/fv3kd6h7k4.1\n).",
    "data_and_code_availability": "Data and code availability\nSpaceflight-relevant RNA-seq data are located in the GeneLab database (\nhttps://genelab-data.ndc.nasa.gov/genelab/projects\n). All software packages are open source and are linked in the methods section. Instructions for installing packages using Conda are provided on Github (\nhttps://github.com/nasa/GeneLab_Data_Processing/tree/master/RNAseq/RNAseq_Tool_Instal\n). Custom R scripts for DESeq2 are included as supplemental information and are available in the Github repository GeneLab_Data_Processing (\nhttps://github.com/nasa/GeneLab_Data_Processing\n). Original data have been deposited to Mendeley Data: \nhttps://doi.org/10.17632/fv3kd6h7k4.1\n).",
    "methods": "Methods\nAll methods can be found in the accompanying \ntransparent methods supplemental file\n.",
    "supplemental_information": "Supplemental information\nDocument S1. Transparent methods, Figure S1, and Table S6\nTable S1. GeneLab datasets, related to transparent methods\nTable S2. Genome & annot files, related to Figures 3 and 4\nTable S3. Organism to annot map, related to Figure 5\nTable S4. Pipeline tools, related to transparent methods\nTable S5. Sample names, related to Figure 6\nData S1. DEG script w ERCC norm, related to Figure 5\nData S2. DEG script without ERCC norm, related to Figure 5",
    "author_contributions": "Author contributions\nAll authors developed the initial analysis scheme at the 2019 GeneLab AWG workshop. EGO, AMSB, ZZ, KSR, HF, WAdS, RB, and JMG refined this into a draft pipeline. EGO and AMSB wrote and validated the final processing scripts. EGO and AMSB wrote the original manuscript draft and generated figures. All authors reviewed and edited the final draft.",
    "declaration_of_interests": "Declaration of interests\nThe authors declare no competing interests."
  },
  "pmc_url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8044432/"
}